<?php

namespace {{ namespace }};

use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\RelationManagers\RelationManager;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;
use App\Http\Controllers\FilamentFieldsController;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;


class {{ managerClass }} extends RelationManager
{

    public static function getTitle(Model $ownerRecord, string $pageClass): string
    {
        $table = Str::of(class_basename($ownerRecord))
            ->before('RelationManager')
            ->replaceMatches('/([a-z])([A-Z])/', '$1 $2')
            ->studly()
            ->value();
        $relationName = Str::of(class_basename(static::class))
            ->before('RelationManager')
            ->plural()
            ->lower()
            ->value();
        $resourceName = Str::studly($table) . 'Resource::' . $relationName;
        return \App\Models\ResourceConfig::where('resource', $resourceName)->value('navigation_label')  ?? $table;

        #return 'Kontaktpersonen von ' . $ownerRecord->name;
    }

    protected static string $relationship = '{{ relationship }}';

    public function form(Form $form): Form
    {
        $fc = new FilamentFieldsController('{{table}}',1);
        $schema = $fc->getSchema() ?? [];
        return $form->schema($schema);
    }

    public function table(Table $table): Table
    {
        $fc = new FilamentFieldsController('{{table}}',0);
        $table_fields = $fc->getTableFields() ?? [];
        return $table
            ->recordTitleAttribute('{{ recordTitleAttribute }}')
            ->columns(
                $table_fields,
            )
            ->filters([
{{ tableFilters }}
            ])
            ->headerActions([
{{ tableHeaderActions }}
            ])
            ->actions([
{{ tableActions }}
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
{{ tableBulkActions }}
                ]),
            ]){{ modifyQueryUsing }};
    }
}
